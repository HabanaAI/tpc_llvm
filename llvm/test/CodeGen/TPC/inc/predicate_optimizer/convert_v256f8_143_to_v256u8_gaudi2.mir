# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -mtriple=tpc -mcpu=gaudi2 -run-pass=tpc-pred %s -o - | FileCheck %s

--- |
  define void @main() #0 {
  entry:
    %0 = insertelement <5 x i32> <i32 undef, i32 0, i32 0, i32 0, i32 0>, i32 0, i32 0
    %1 = tail call <256 x f8_143> @llvm.tpc.ld.tnsr.v256f8_143.i1(<5 x i32> %0, i8 0, i32 0, <256 x f8_143> undef, i1 true, i1 false)
    %2 = call <256 x i8> @llvm.tpc.convert.v256i8.v256f8_143.i1(<256 x f8_143> %1, i8 13, i32 1280, <256 x i8> zeroinitializer, i1 true, i1 false)
    %3 = insertelement <5 x i32> <i32 undef, i32 0, i32 0, i32 0, i32 0>, i32 0, i32 0
    call void @llvm.tpc.st.tnsr.v256i8(<5 x i32> %3, i8 1, <256 x i8> %2, i32 0, i1 true, i1 false)
    ret void
  }

  ; Function Attrs: nounwind readnone
  declare <256 x f8_143> @llvm.tpc.ld.tnsr.v256f8_143.i1(<5 x i32>, i8, i32, <256 x f8_143>, i1, i1) #1

  ; Function Attrs: nounwind writeonly
  declare void @llvm.tpc.st.tnsr.v256i8(<5 x i32>, i8, <256 x i8>, i32, i1, i1) #2

  ; Function Attrs: nounwind readnone
  declare <256 x i8> @llvm.tpc.convert.v256i8.v256f8_143.i1(<256 x f8_143>, i8, i32, <256 x i8>, i1, i1) #1

  attributes #0 = { "target-cpu"="gaudi2" }
  attributes #1 = { nounwind readnone "target-cpu"="gaudi2" }
  attributes #2 = { nounwind writeonly "target-cpu"="gaudi2" }

...
---
name:            main
tracksRegLiveness: true
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: main
    ; CHECK: CACHE_INVALIDATE 4, $sprf_true, 0
    ; CHECK: [[DEF:%[0-9]+]]:irf = IMPLICIT_DEF
    ; CHECK: [[SET_INDX_ld_ip:%[0-9]+]]:irf = SET_INDX_ld_ip [[DEF]], 0, 31, 0, $sprf_true, 0
    ; CHECK: [[COPY:%[0-9]+]]:sprf = COPY $sprf_true
    ; CHECK: [[DEF1:%[0-9]+]]:vrf = IMPLICIT_DEF
    ; CHECK: [[LD_TNSRvp:%[0-9]+]]:vrf = LD_TNSRvp [[SET_INDX_ld_ip]], 0, 0, [[DEF1]], $sprf_true, 0
    ; CHECK: [[DEF2:%[0-9]+]]:vrf = IMPLICIT_DEF
    ; CHECK: [[MOV_ld_vip:%[0-9]+]]:vrf = MOV_ld_vip 0, 4, 0, [[DEF2]], $sprf_true, 0
    ; CHECK: [[DEF3:%[0-9]+]]:vrf = IMPLICIT_DEF
    ; CHECK: [[CONVERTvvp:%[0-9]+]]:vrf = CONVERTvvp killed [[LD_TNSRvp]], 13, 1280, [[DEF3]], $sprf_true, 0
    ; CHECK: ST_TNSRvp [[SET_INDX_ld_ip]], 1, killed [[CONVERTvvp]], 0, $sprf_true, 0
    ; CHECK: HALTs
    CACHE_INVALIDATE 4, $sprf_true, 0
    %1:irf = IMPLICIT_DEF
    %0:irf = SET_INDX_ld_ip %1, 0, 31, 0, $sprf_true, 0
    %2:sprf = COPY $sprf_true
    %4:vrf = IMPLICIT_DEF
    %3:vrf = LD_TNSRvp %0, 0, 0, %4, %2, 0
    %6:vrf = IMPLICIT_DEF
    %5:vrf = MOV_ld_vip 0, 4, 0, %6, $sprf_true, 0
    %7:vrf = CONVERTvvp killed %3, 13, 1280, %5, %2, 0
    ST_TNSRvp %0, 1, killed %7, 0, %2, 0
    HALTs

...
