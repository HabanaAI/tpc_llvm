; RUN: llc  %s  -o -

; GAUDI-1456      Usage of macroses from tpc-defs.h is not allowed in ll tests

; ModuleID = '/home/dmordechai/trees/npu-stack/tpc_fuser/fused_kernels/kernels/src/selu_params_i16.c'
source_filename = "/home/dmordechai/trees/npu-stack/tpc_fuser/fused_kernels/kernels/src/selu_params_i16.c"
target datalayout = "e-p0:32:32:32-p1:32:32:32-p2:32:32:32-p3:64:64:64-i32:32:32-i16:32:32-i8:32:32-n8:16:32-f16:16:16-f32:32:32-v16:32:32-v32:32:32-v160:32:32-v256:2048:2048-v2048:2048:2048-v4096:2048:2048-v8192:2048:2048"
target triple = "tpc"

@llvm.embedded.module = private constant [10168 x i8] c"BC\C0\DE5\14\00\00\05\00\00\00b\0C0$IY\BE\E6\EE\D3>-D\012\05\00\00\00\00!\0C\00\00b\08\00\00\0B\02!\00\02\00\00\00\13\00\00\00\07\81#\91A\C8\04I\06\1029\92\01\84\0C%\05\08\19\1E\04\8Bb\80\1CE\02B\92\0BB\E4\102\148\08\18K\0A2r\88H\90\14 CF\88\A5\00\192B\04I\0E\90\91#\C4PAQ\81\8C\E1\83\E5\8A\049F\06Q\18\00\007\01\00\00\1B^&\F8\FF\FF\FF\FF\01\90\88qx\07y\90\87r\18\07z`\87|h\03yx\87zp\07r(\07rh\03rH\07{H\07r(\876\98\87x\90\07zh\03s\80\876h\87p\A0\07t\00\CC!\1C\D8a\1E\CA\01 \C8!\1D\E6!\1C\C4\81\1D\CA\A1\0D\E8!\1C\D2\81\1D\DA`\1C\C2\81\1D\D8a\1E\00s\08\07v\98\87r\00\08v(\87y\98\876\80\07y(\87qH\87y(\8760\07xh\87p \07\C0\1C\C2\81\1D\E6\A1\1C\00\C2\1D\DE\A1\0D\CCA\1E\C2\A1\1D\CA\A1\0D\E0\E1\1D\D2\C1\1D\E8\A1\1C\E4\A1\0D\CA\81\1D\D2\A1\1D\00z\90\87z(\07`p\87wh\03s\90\87ph\87rh\03xx\87tp\07z(\07yh\83r`\87th\876p\87wp\876`\87r\08\07s\00\08wx\876H\07w0\87yh\03s\80\876h\87p\A0\07t\00\CC!\1C\D8a\1E\CA\01 \DC\E1\1D\DA@\1D\EA\A1\1D\E0\A1\0D\E8!\1C\C4\81\1D\CAa\1E\00s\08\07v\98\87r\00\08wx\876p\87pp\87yh\03s\80\876h\87p\A0\07t\00\CC!\1C\D8a\1E\CA\01 \DC\E1\1D\DA`\1E\D2\E1\1C\DC\A1\1C\C8\A1\0D\F4\A1\1C\E4\E1\1D\E6\A1\0D\CC\01\1E\DA\A0\1D\C2\81\1E\D0\010\87p`\87y(\07\80p\87wh\03z\90\87p\80\07xH\07w8\876h\87p\A0\07t\00\CC!\1C\D8a\1E\CA\01 \E6\81\1E\C2a\1C\D6\A1\0D\E0A\1E\DE\81\1E\CAa\1C\E8\E1\1D\E4\A1\0D\C4\A1\1E\CC\C1\1C\CAA\1E\DA`\1E\D2A\1F\CA\01\C0\03\80\A0\87p\90\87s(\07zh\83q\80\87z\00\C8!\1C\D8!\1D\00\82\1E\C2A\1E\CE\A1\1C\E8\A1\0D\CC\A1\1C\C2\81\1E\EAA\1E\CAa\1E\805 \87p`\87t\00\88zp\87y\08\07s(\8760\07xh\83v\08\07z@\07\C0\1C\C2\81\1D\E6\A1\1C\00\A2\1E\E6\A1\1C\DA`\1E\DE\C1\1C\E8\A1\0D\CC\81\1D\DE!\1C\E8\010\87p`\87y(\07`\83!\FC\FF\FF\FF\FF\00\B4\01 m \06\01X6\18\C4\FF\FF\FF\FF\0F\80\04P\1Bb\A6\F8\FF\FF\FF\FF\01\10\00\89\18\87w\90\07y(\87q\A0\07v\C8\876\90\87w\A8\07w \87r \876 \87t\B0\87t \87rh\83y\88\07y\A0\8760\07xh\83v\08\07z@\07\C0\1C\C2\81\1D\E6\A1\1C\00\82\1C\D2a\1E\C2A\1C\D8\A1\1C\DA\80\1E\C2!\1D\D8\A1\0D\C6!\1C\D8\81\1D\E6\010\87p`\87y(\07\80`\87r\98\87yh\03x\90\87r\18\87t\98\87rh\03s\80\87v\08\07r\00\CC!\1C\D8a\1E\CA\01 \DC\E1\1D\DA\C0\1C\E4!\1C\DA\A1\1C\DA\00\1E\DE!\1D\DC\81\1E\CAA\1E\DA\A0\1C\D8!\1D\DA\01\A0\07y\A8\87r\00\06wx\8760\07y\08\87v(\876\80\87wH\07w\A0\87r\90\876(\07vH\87vh\03wx\07wh\03v(\87p0\07\80p\87wh\83tp\07s\98\8760\07xh\83v\08\07z@\07\C0\1C\C2\81\1D\E6\A1\1C\00\C2\1D\DE\A1\0D\D4\A1\1E\DA\01\1E\DA\80\1E\C2A\1C\D8\A1\1C\E6\010\87p`\87y(\07\80p\87wh\03w\08\07w\98\8760\07xh\83v\08\07z@\07\C0\1C\C2\81\1D\E6\A1\1C\00\C2\1D\DE\A1\0D\E6!\1D\CE\C1\1D\CA\81\1C\DA@\1F\CAA\1E\DEa\1E\DA\C0\1C\E0\A1\0D\DA!\1C\E8\01\1D\00s\08\07v\98\87r\00\08wx\876\A0\07y\08\07x\80\87tp\87sh\83v\08\07z@\07\C0\1C\C2\81\1D\E6\A1\1C\00b\1E\E8!\1C\C6a\1D\DA\00\1E\E4\E1\1D\E8\A1\1C\C6\81\1E\DEA\1E\DA@\1C\EA\C1\1C\CC\A1\1C\E4\A1\0D\E6!\1D\F4\A1\1C\00<\00\08z\08\07y8\87r\A0\876\18\07x\A8\07\80\1C\C2\81\1D\D2\01 \E8!\1C\E4\E1\1C\CA\81\1E\DA\C0\1C\CA!\1C\E8\A1\1E\E4\A1\1C\E6\01X\03r\08\07vH\07\80\A8\07w\98\87p0\87rh\03s\80\876h\87p\A0\07t\00\CC!\1C\D8a\1E\CA\01 \EAa\1E\CA\A1\0D\E6\E1\1D\CC\81\1E\DA\C0\1C\D8\E1\1D\C2\81\1E\00s\08\07v\98\87r\006\10\86\00`\1B\88c\00\B0\0D\04B\00\D8\06\22)\00l\03\A1\18\00\B6\C1X\FE\FF\FF\FF\7F\00$\80\0E6\18L\00,\00\1Dl0\1A\01X\80j\03\E1\FC\FF\FF\FF\FF\00H\1B\8A'\08\02\10\D9P@B\10\80\08\00\00\00\00I\18\00\00\0C\00\00\00\13\82`\82 \0C\13\02b\82Q\18\07\92(\13\82e\82P\18\13\04\81\990\08L3!p&\14\C6\81$\CA\84\C0\98\10<\13\84\07\02\00\00\89 \00\00J\00\00\002\22\C8\09 d\85\04\93#\A4\84\04\93#\E3\84\A1\90\14\12L\8E\8C\0B\84\E4L\10\94\C2\1C\01\18\0C#\14\C0 B\10\8C\00\94`@\849\02P\98#@\E8P\86\81\01A\89\12\04h1G\00\0D#\80D3G\10\94\C3\118\00\1C\8F\07A\CA\E1p4\1A\8DF\83$\E5\18\04\0E\0E\C0\E3A\94\228\1Ad)\C8\A3\D18\00\1E\8F\07a\0A\D2h4\0E\80\C6\E3A\9Aa\04\10y\0A\C2q4\0E\00\CE\E3A\9DRp8\9C\C7\83>\C3\08 r\14\C4\E1\08\1D\00\0E\CE\83Dep8\1AD*\88\C3\D18\00\1C\8F\07\99\8A\E2p4B\A1\03\C0\C1y\10\AA\14\03\C4\01\F0 U9\1C\8E\03\C0\F1x\10\AB\14\03\04\02\F0 \D70\02\884\E5\809\00\00\D8\E3A\B1\A28\1C\8E\D0\E1\00p<\1E4+\87\C3\01\008\1E\0F\AA\0D\04P\80\00\E4\98\02\A0\06q\86\11\C0\E0\18F\00\11\E0.i\8A(a\F2\7F\E9p\A2\A9\B6\F9\FF\01\90\E8\9F\90\E0p\10p\18\01$\00\82\0D\228\02\00\00\13\06z\80\87q\D8\90\1A\E5\D0\06\F0\00\07z0\07r\A0\07s \07z0\07r\D0\06\F0\10\07z0\07r\A0\07s \07z0\07r\D0\06\F0 \07z0\07r\A0\07s \07z0\07r\D0\06\F00\07z`\07t\A0\07v@\07z`\07t\D0\06\E90\07r\A0\07s \07z0\07r\D0\06\E9\10\07v\A0\07s \07z0\07r\D0\06\E9\80\07z0\07r\A0\07s \07m\E0\0Ex\A0\07q`\07z0\07r\D0\06\E6\10\07v\A0\07q`\07z\10\07v\D0\06\E60\07r\A0\07s \07z0\07r\D0\06\F6\10\07v\A0\07s \07z0\07r\D0\06\F60\07r\A0\07s \07z0\07r\D0\06\F6\10\07v\00\07z0\07r\A0\07s \07m`\0FrP\07v\A0\07r\00\07t\80\07z \07p@\07x\D0\06\F6 \07p@\07x\A0\07r\00\07t\80\07z \07p@\07x\D0\06\F6@\07p\90\07v\A0\07r\00\07t\80\07z \07p@\07x\D0\06\F6\80\07q\90\07r\A0\07r\00\07t\80\07z \07p@\07x\A0\F4\80\10!\09d\C8H\91\11@#\84\C9\A9-\BC\D0\EFv\F9En\BF\E5\E4\F2\18\1DN\BF\E8\F2ry\FEr\C3\EB\AD9=<^\BF\E8\F0\F1\D7\5C\9F\97\E5/s}^&\7F\D7e\B9\BB\CC\9E\BF\D6e\B9\BB\CC\9E\BF\E6\F2\F1k^f\D7\BF\F0\B0<\DC\9E\7F\D31\9Bk\BC\03\02\A6\C0\D8\00\03\00\00\00\00\00 \18\22M\04\01\00@\00\00\00\00\00\00\00\00\C1\10\E9\C2\12 \00\04\00\00\00\00\00\00\00\00\86Ho\F0-@\00\0C\00\00\00\00\00\00\00\00\0C\91\5C\A1[\80\00\18\00\00\00\00\00\00\00\00\18\22\AD\C3\06\01\010\00\00\00\00\00\00\00\000D2\09D\02\00\86\00\00\00\00\00\00\00\80`\88\E4\12\18\05\04@\01\00\00\00\00\00\00\00\C0\10\C9,\AC\04\08\00\01\00\00\00\00\00\00\00\80!\12_P\16\10\00\03\00\00\00\00\00\00\00\00C$\D8\F00 \00\06\00\00\00\00\00\00\00\00\86H\EE\B1i@\00\0C\00\00\00\00\00\00\00\00\0C\91R\E4\0C: \00\06\00\00\00\00\00\00\00\00\86HpB}@\00\0C\00\00\00\00\00\00\00\00\0C\91HE\0D\C4\00\08\80\01\00\00\00\00\00\00\00\80!\92\BB\1Cd\00\00\8C\01\00\00\00\00\00\00\00\C1\10\A9^\C6\C0\0C\80\00\18\00\00\00\00\00\00\00\00\18\22\E1\CC\19\A0\01\10\00\03\00\00\00\00\00\00\00\00C\A4\BF\A1\D4\00\08\80\03\00\00\00\00\00\00\00\80!\D2\EC|l\00\04\C0\00\00\00\00\00\00\00\00\C0\10I~63\00\02`\00\00\00\00\00\00\00\00`\88\D4Bc`\06@\00\0C\00\00\00\00\00\00\00\00\0C\91\E0(s\03 \00\10\00\00\00\00\00\00\00\00\86H\A9D\06q\00\04\C0\00\00\00\00\00\00\00\00\C0\10\A9\9D\C6`\0E\80\00\18\00\00\00\00\00\00\00\00\18\22\C1\94\18\D4\01\10\00\03\00\00\00\00\00\00\00\00\12\1B\04\0A\97!\00\00d\81\00\08\00\00\002\1E\98\14\19\11L\90\8C\09&G\C6\04C\0A\8C\00\10\A0\04\0A\81\0C#\00\05H\00\00\00\00\B1\18\00\00t\00\00\003\08\80\1C\C4\E1\1Cf\14\01=\88C8\84\C3\8CB\80\07yx\07s\98q\0C\E6\00\0F\ED\10\0E\F4\80\0E3\0CB\1E\C2\C1\1D\CE\A1\1Cf0\05=\88C8\84\83\1B\CC\03=\C8C=\8C\03=\CCx\8Ctp\07{\08\07yH\87pp\07zp\03vx\87p \87\19\CC\11\0E\EC\90\0E\E10\0Fn0\0F\E3\F0\0E\F0P\0E3\10\C4\1D\DE!\1C\D8!\1D\C2a\1Ef0\89;\BC\83;\D0C9\B4\03<\BC\83<\84\03;\CC\F0\14v`\07{h\077h\87rh\077\80\87p\90\87p`\07v(\07v\F8\05vx\87w\80\87_\08\87q\18\87r\98\87y\98\81,\EE\F0\0E\EE\E0\0E\F5\C0\0E\EC0\03b\C8\A1\1C\E4\A1\1C\CC\A1\1C\E4\A1\1C\DCa\1C\CA!\1C\C4\81\1D\CAa\06\D6\90C9\C8C9\98C9\C8C9\B8\C38\94C8\88\03;\94\C3/\BC\83<\FC\82;\D4\03;\B0\C3\0C\C7i\87pX\87rp\83th\07x`\87t\18\87t\A0\87\19\CES\0F\EE\00\0F\F2P\0E\E4\90\0E\E3@\0F\E1 \0E\ECP\0E3 (\1D\DC\C1\1E\C2A\1E\D2!\1C\DC\81\1E\DC\E0\1C\E4\E1\1D\EA\01\1Ef\18Q8\B0C:\9C\83;\CCP$v`\07{h\077`\87wx\07x\98QL\F4\90\0F\F0P\0E3\1Ej\1E\CAa\1C\E8!\1D\DE\C1\1D~\01\1E\E4\A1\1C\CC!\1D\F0a\06T\85\838\CC\C3;\B0C=\D0C9\FC\C2<\E4C;\88\C3;\B0\C3\8C\C5\0A\87y\98\87w\18\87t\08\07z(\07r\98\81\5C\E3\10\0E\EC\C0\0E\E5P\0E\F30#\C1\D2A\1E\E4\E1\17\D8\E1\1D\DE\01\1E\00\00\00\00y \00\00T\00\00\00b\1EH C\88\0C\199\19$\90\91@\C6\C8\C8h\22P\08\142\9E\18\19!G\C8\90Q,\90\DC\00\00\8AX<Q\01\00\00\00wchar_sizeclang version 7.0.0 (ssh://gerrit:29418/tpc_clang cad1854857634550e5d64fae6be97b429a2f3446) (ssh://gerrit:29418/tpc_llvm 471b296fa212b95dc076462640e52ac31370f574)omnipotent charSimple C/C++ TBAAshort\00\00\00#\08\C06\82\00p#\08F7\C3`\04\C7\0C\810C@\CC0\0C\0B2\C3\C00\C8\0CC\C1 3\0C\8E\83\C8H`\822bc\B3ksi{#\ABc+s1c\0B;\9B\1B%@Rac\B3ksI#+s\A3\1B%H\00\00\00\00\A9\18\00\00\0B\00\00\00\0B\0Ar(\87w\80\07zXp\98C=\B8\C38\B0C9\D0\C3\82\E6\1C\C6\A1\0D\E8A\1E\C2\C1\1D\E6!\1D\E8!\1D\DE\C1\1D\00\D1\10\00\00\06\00\00\00\07\CC<\A4\83;\9C\03;\94\03=\A0\83<\94C8\90\C3\01\00\00\00a \00\00^\01\00\00\13\04P,\10\00\00\00\0D\00\00\00d(\94B @\11\8C\00\14\A0@)\14\04\05f\00\08P\06t\18\01 \C7\0C\00=j`\04\80\1A\05\08,P'\05\08(P\1D\15A\87\12\00\00\00\00\F10\00\00\11\00\00\00\22G\C8\90Q\0AD\19\00\00\00\00\83\07\00\00intllvm.loop.machine.unroll.count\00\00\00+\04\A9\DA0@\0C\B2a\98&d\83\10\1D\003\11\01\B0\99\C2LD\00l\A60\13\01\00\DB(\CCD\00\C06\0A3\11\00\B0\8D\C2L\04\00l\A30\13\11\00\9B)\CCD8\C0\96\0A3\11\0E\B0\A5\C2%\88\1D10\12\10\04\83D\0F\BA`\C4\80\00@\10\0C\96<\186 \96\C0\00NA\EC\88\81\91\80 \18$|\F0\05\C4\04\CC\88\01\01\80 \18,{PB\00\C3\06\84\13\18\C05\88\1D10\12\10\04\83\04\14\C4  (`\C6\10\021\B0 \0DD`\D8\80\88\82\01\98%\08(\02\0C\9A\02f\0C!0\03\0B\DA@\04\86\1B\88\00\0Df\19\06!\186 \AA4\18\80\B3\10;b`$ \08\06\C9(\ACA0K\F0\5C\85\D8\11\03#\01A0HT\81\0D\02\D2\02f\0C!X\03\0B\D6@\04\86\0D\88,\18\80Y\02\822\C0\A0.`\C6\10\827\B0\E0\0DD`\B8\81\08\D0`\96\C1(\82a\03\E2\83\83\018\0F\B1#\06F\02\82`\90\B4B\1D\04\B3\04\CDy\88\1D10\12\10\04\83\84\16\EC  2\08\981\84\80\0F,\E0\03\11\186 \C4 \18\80Y\82\83\C4\000\E8\0C\02f\0C!\00\05\0B@A\04\86\1B\88\00\0Df\19\12$\186 \D2 \0F\06\E0\CE\00\B1#\06F\02\82`\90\DC\C2\1F\04\B3\04\CB\9D\01bG\0C\8C\04\04\C1 \F1\85P\08H\0D\00c\8Ea\0F\82?\A05\00\8C9\06!@\05\82\03\C0\98c\10\02R\98c\08H\E1\0F\E6\18\82RX\85a\03\02\0E\02\03\B87@\EC\88\81\91\80 \18$\E7\B0\0A\01\C5A\C0\8C\18(\00\08\82\01T\0E\81(\A0B(\80\C2\1F\0C\1B\10r\10$\C0\C5\01bG\0C\8C\04\04\C1 Q\07W\08h\0E\1C\19F\0C\14\05\04\C1@:\87 \14@\E1\0F\FC\A0\0F\86\0D\08:\08\12\80\EC `\A8\0E\1C\19F\0C\14\00\04\C1\80J\07\E1\0F\02W0\85R8;@\EC\88\81\91\80 \18$\E90\0B\C1\E1\01bG\0C\8C\04\04\C1 Q\07Z\08N\0F\10;b`$ \08\06\C9:\D0B0K\A0\10\1F\00\86\05\B9\00\02\C3\06\84\1F\04\030Kp\CC\120\F4\07\80a\C1,\80\C0\B0\01\11\0A\C1\00\CC\12\10\B3\04\0E\8D\02`X\D0\0B 0l@\94B0\00\B3\04\C1\99\02bG\0C\8C\04\04\C1 \91\87]\08\0E\15\10;b`$ \08\06\C9<\F0B\80\E1@\00\00d\00\00\00\86c\08\8E\13\0D\D2\09@\85\13\F9\82\D3\0C\BE\B0\10@C=&\13!\CD@\5C\BF\F4\00\02\F1K\13\10M\16vT\84\804\C8d9\05\D2<\D4d3\0F\D2\0C\C4\F5K\0F \10?\D1\0C6\96T\84\804\C8T\F7\964\08\CCcH\04C-\B69\11\0C\B5\E0g\A0\14N\E4\07\CE\80\D5\B4I\11\0C\B5\EC\D6U\08\CCS\EBW\10\15N\E4\0BN3\F8\C2B\00\0D\F5\F4\97\A0\14N\E4\07\CE\80\D5\BC\11\0D\0C\B5\D8\90Q\11\02qM\86U0\D4R\DB\07P\10\CD\14a\C6U0\D4R\E7f\96T\84\804\C8d\D7\C7\90\14N\E4#\8D`\E3V\96T\84\804\C8d\D3\E7\90\14N\E4#\8D`\EF\A638\D4dgIE\08H\83L\B6}\07J\E1D\BE\E04C}\DB\D1Q\11\02qM\B55\1D\15!\10\D7t[\D4Q\11\02qM\BA\D9\10\03\C2\D0vC\0C\08S\1B\0D1 \8C}\0BG\E1D>\D1\0CG\90\14N\E4\0BN3\E4FW\00\C3`\DF\A7p\14N\E4#\8D`v\050\0Cvnx\050\0C6o5\91\B0\10@C=\FE@H\93/-\CEt\08R\E1D\BE\E04\83/,\04\D0PO\BD\DB\14!0\0F\7F\03H\E1D~\E0\0C\98\01\0D\C00\D8\15R\11\02qMum[HE\08\C45\D5\F85$\85\13\F9D3\D8\FA=$\85\13\F9D3\D8\FD\05 \85\13\F9\82\D3\0C\D6F\08\C0\B2\00\00\011\00\00&\00\00\00[\06&`\B6\0CO\C0l\19\A4\80\D92T\01\B3e\C0\82i\CB\A0\05\D3\96a\0B\98-\83\19\04\CC\96!\0D\82i\CB\B0\06\C1\B4e`\83\80\D92\DCA\C0l\19\F4 \98\B6\0C|\10L[\86>\08\98-\03*\04\D3\96A\15\82i\CB\C0\0A\C1\B4e\80\85\80\D92\CCB\C0l\19j!`\B6\0C\B8\100[\06]\08\98-\C3.\04\CC\96\81\17\02f\CBP\0E\C1\B4e8\87`\DA2\A0\83\14m\19\D4!\98\B6\0C\EC\10L[\86w\08\A6-C<\04\13\00!1\00\00\07\00\00\00\0B\90@\18\00\A20\EE`\01\12\08\03@\14\86\1D,@\02a\00\88\C2\A0\03\00\00\00\00\00\00a \00\00\87\01\00\00\13\04A,\10\00\00\00\10\00\00\00\D4\18\01 C!P\A3.\E8P\0E\04\18\01\A0\C7\0C@\0D\8C\00Pc\06\808#\00\D4\A8@@\02\E2\CC\00\D0a\04\80\00uA\A1\19\00\FA\8D\00\10\A0\08\C81\03@\A1\11\00\00\00\00\003\11\0E\B0\A5\C2LD\03l\A30\13\D1\00\DB(\CCD4\C06\0A3\11\0D\B0\8D\C2LD\03l\A30\13\E1\00[*\CCD8\C0\96\0A3\11\0D\B0\8D\C2L\C4\01l\A30\13\D1\00\DB(\CCD8\C0\96\0A3\11\0E\B0\A5\C2L\04\07l\A90\13\C1\01[*\CCD4\C06\0A3\11\1C\B0\A5\C2L\04\07l\A90\13\E1\00[*\0C\1B\10\13\1B$\C0\B0\01!\AD\C1\00\0C\1B\10\91\1A\0C\C0\B0\01\01\A5\C1\00\0C\1B\10\0F\1A\0C\C0\B0\01\E1\9C\C1\00\5C\83\D8\11\03#\01A0HT\C1\0D\82\11\83\02\00A0\B0F\E1\0C\86\0D\88'H\80s\10;b`$ \08\06\09+\C0A@\96#\C3\B0\01\01\05\09p\0FbG\0C\8C\04\04\C1 q\055\08\86\0D\08(\0D\06`\C4\C0H@\10\0C\12WP\83\87\A6\C6\181X\00\10\04\03\EC\14\025H\0348\033(\83\0B\0E1l@H\C1\00\5C\84\D8\11\03#\01A0Hd\C1\0D\02\BA\1Ac\C4`\01@\10\0C4U\08\DC\A0\0D\D8\00\0D\D4 \0D\86\0D\08*\18\80\9B\10;b`$ \08\06I-\E4A@]c\8C\18\14\00\08\82\81\F5\0A\C1\B0\01a\05\09p\15bG\0C\8C\04\04\C1 \C1\05>\08\C8k\8C\11\83\02\00A0\B0d!\186 \B0 \01\EEB\EC\88\81\91\80 \18$\BB\F0\07\C1\B0\01\81\BDA\02\DC\85\D8\11\03#\01A0Hx\01\14\82a\03\02\83\83\04\B8\0B\B1#\06F\02\82`\90\F4B\1E\04\C3\06\04\06\07\03p\17bG\0C\8C\04\04\C1 \F1\05Q\08(\0C\1C\19\86\0D\08l\0E\12\800N\86\11\83\05\00A0\E8lA\E8\03=\C8\039\B8\03;\186 \B6 \01h\E3d\B8\C0\B7\17p\96\C2\80\93\E1\02\DF^\C0YB\83\C3\18n\08\F2 \0CF\0C\10\00\04\C1\E0\F3\05c\08\FE`\D8\800\83 \01\E8\0D\1A\E3\02\80X\C0\07!p\C1\01\E6\18\FA 8\85A\86\C0\0F\FA\80\E6\C0\91\81\DA\80\93\81\EA\C0\91\81\EC\C0\91a\C4`\01@\10\0C\C4\00\1D\88\C2\15BA\18Ta\D8\80\C0\83 \01\AE\0D\10;b`$ \08\06\89=\E8B@y\E0\C8@w\D0\18#\06\C6\02\82`@\06\EB \04\C3\06D\1C\04\09@q\E0\C8@u\D0\18#\06\0B\00\82``\06\ED \04\B5 \0E\A7 \0B\B10l@\D0A\90\00\F4\07\8E\0CD\0A\8DA|\E0\C8pAh\89\14\1C\19h\0F8\19F\0C\1A\00\04\C1\00\0D\E6\C1(\86V\E0\85W\10\82\5C\186 N!H\00\DA\03G\06j\85\C6 Rpd\B8 \B4\B4\0A\8E\0C$\0A\9C\0C#\06\0D\00\82`\80\06\FA`\14\03-\8C\83-\08\C1/\0C\1B\10\AE\10$\00\B9\82#\C3\8D\02bG\0C\8C\04\04\C1 1\09x\08\CE\14\10;b`$ \08\06\C9I\C4Cp\A8\80\D8\11\03#\01A0HPB\1D\82S\05\C4\8E\18\18\09\08\82A\92\12\F3\10\1C+ v\C4\C0H@\10\0C\12\95\A0\87\E0\5C\01\B1#\06F\02\82`\90\ACD=\04\07\0B\88\1D10\12\10\04\83\84%\EC!8Y@\EC\88\81\91\80 \18$-\F1\0E\C1\88\81\91\80 \18$-\F1\0E\B4p\B5\80\D8\11\03#\01A0H\5C\02\1E\82\BB\05\C4\8E\18\18\09\08\82A\F2\12\F9\10\5C. v\C4\C0H@\10\0C\12\98\D0\87 \99p F\00\00\00\B6\C3H\02\B0\10\7F\ED\03\C3\10Y[!8MU\1B\89B\5C\8F\D3\10\CD\F4_\F6V\08NS\D9\06\17I\CF\02L\BE\F4,\C0\844\12\11M6d4\D2\81\14\93\85\1C\D2\81\14\D3O\DB\C8!\1DH1\FD\B5\11\19\8Ft \C5d\1F\05\D2<\D4d@\06\03\5C\DE\F5\98\14!8Me:\8Ct \C5\F4\D3>0\0C\91\81\1C\92\00,\C4O\9B\C8!\09\C0B\FC\B5\05!\85\13\09\84w=Vt4\CE\94F\C4`9\8C$\00\0B\F1\D3>0\0C\91%A\BE\E00\8FC5\C3\82LD\04,&\B4L\CC\E3]\8F\D3\10\CDdJ\03q=\E66HT`G\88\D3\10*\054\93\A9\19\93\138\CEbH\C1c=\0Fq=NC4\D3\7F\F9\C00D\07P\10\CD\14af\14\15N$\10\EC\81\14\D3K\08iD\0C\C6\C3H\07RL\7F\ED\03\C3\10\99\CF\E0P\93\E1(H\F3P\93\0F\0CCd?\C1eq\8B\F4,\C0\E4K\CF\02L\A6G\08\C0\B2\00\00\011\00\00A\00\00\00[\86)`\B6\0CT\E0l\19\AA\C0\D92X\81\B3e\B8\02g\CB\80\05\CE\96\81\0B\98-\C3\170[\060\08\98-\C3\18\04\CE\96\A1\0C\02g\CB\80\06\01\B3eX\83\C0\D92\B4A\E0l\19\E0 p\B6\0Cr\100[\86:\08\9C-\C3\1D\04\CC\96A\0F\02f\CB\D0\07\01\B3e\00\85\C0\D92\8CB\C0l\19H!`\B6\0C\A5\100[\86S\08\98-\03*\04\CC\96a\15\02f\CB\E0\0A\01\B3e\88\85\80\D92\C8B\E0l\19p!`\B6\0C\B9\100[\06]\08\98-\C3.\04\CC\96\A1\17\02f\CB\00\0E\01\B3e\08\87\C0\D92\8CC\C0l\19\C8!`\B6\0C\E5\108[\86s\08\98-\03:\04\CC\96!\1D\02g\CB\A0\0E\01\B3e`\87\80\D92\B4C\C0l\19\DE!`\B6\0C\F0\100[\86x\08\9C-\83<\04\CC\96\81\1E\02f\CBP\0F\01\B3e\B8\87\80\D92\E0C\C0\00\00\00\00\00\00\00a \00\00\0A\02\00\00\13\04A,\10\00\00\00i\00\00\00d(@\04:\8C\00\10\A0\00\11\E81\02@\86B @\15\D4\009f\00\080\02@\C2\11\00:\94\03=j\80\00\85T\04\04\9B\01 \E1X \01\04\C2@\14\C6\81$\CA\C24\CE\03E\D2DU\D6\85e\DA\C6u\DE\07\06a \06c@\06e`\06g\80\06i\A0\06k\C0\06m\E0\06o\00\07q \07s@\07u`\07w\80\07y\A0\07{\C0\07}\E0\07\7F\00\0A\A1 \0A\A3@\0A\A5`\0A\A7\80\0A\A9\A0\0A\AB\C0\0A\AD\E0\0A\AF\00\0B\B1 \0B\B3@\0B\B5`\0B\B7\80\0B\B9\A0\0B\BB\C0\0B\BD\E0\0B\BF\00\0E\E1 \0E\E3@\0E\E5`\0E\E7\80\0E\E9\A0\0E\EB\C0\0E\ED\E0\0E\EF\00\0F\F1 \0F\F3@\0F\F5`\0F\F7\80\0F\F9\A0\0F\FB\C0\0F\FD\E0\0F\FF0\16H\80DH\88\C4H\90DI\98\C4I\A0DJ\A8\C4J\B0DK\B8\C4K\C0DL\C8\C4L\D0DM\D8\C4M\E0DN\E8\C4N\F0DO\F8\C4O\80EX\88\C5X\90EY\98\C5Y\A0EZ\A8\C5Z\B0E[\B8\C5[\C0E\5C\C8\C5\5C\D0E]\D8\C5]\E0E^\E8\C5^\F0E_\F8\C5_\80Fh\88\C6h\90Fi\98\C6i\A0Fj\A8\C6j\B0Fk\B8\C6k\C0Fl\C8\C6l\D0Fm\D8\C6m\E0Fn\E8\C6n\F0Fo\F8\C6o\80Gx\88\C7x\90Gy\98\C7y\A0Gz\A8\C7z\B0G{\B8\C7{\C0G|\C8\C7|\D0G}\D8\C7}\E0G~\E8\C7~\F0G\7F\F8\C7\7F\10p\06\80\00e\00\00\F10\00\00\0C\00\00\00\22G\C8\90Q\06\04\05\10\00\00\00_short128_pair_t\13\04\C3\DB` Q\13E\CD\86\02b\10&\DA0L\13\023\11\0E\B0\A5\C2LD\03l\A30\13\E1\00[*\CCD8\C0\96\0A3\11\0E\B0\A5\C2L\04(\00[*\CCD4\C06\0A3\11\0D\B0\8D\C2L\84\03l\A90\13\E1\00[*\CCD\80\02\B0\A5\C2L\04(\00[*\CCD\80\02\B0\A5\C2L\04(\00[*\0C\1B\10\CE\18$\C0\B0\01\D1\88\C1\00\1C\83\D8\11\03#\01A0HB\A1\0C\82c\10;b`$ \08\06\89(\98Ap\0CbG\0C\8C\04\04\C1 \19\853\08\8EA\EC\88\81\91\80 \18$\A4P\06\C15\88\1D1@\18\10\04\035\A8\83\A0\0C\C8`\0C\AEA\EC\88\81\91\80 \18$\A60\06\01M\8Dq\01@\8C\0C\82\10\B8\A0\01\C3\06\84\14\0C\C0E\88\1D10\12\10\04\83d\15\D0 \A0\A91.\00H\D1Ap\16\D4A\08\5C\D0\80a\03\E2\0A\06\E0,\C4\8E\18\18\09\08\82A\12\0Bu\10\90\D7\18\17\00\C4\DC \00\81\0B\1A0\C7\F0\06\81\1B\0C2\04p\E0\06\C3\06D\17$\C0q\88\1D10\12\10\04\83\04\17\F8 \A02h\8C9\869\08\E4`\90!\A0\039\186 \C0 H\00J\03G\86\11\03\05\00A0`\83U\08\E6\A0\0E\EC@\0E\F4`\D8\80H\83 \01(\0D\1C\19\C8\0C\1Ac\C4`\01@\10\0C\CC\A0\15\84\C0\0E\F0 \0F\EA\A0\0F\86\0D\885\08\12\80\D8\C0\91\81\D0\A01F\0C\16\00\04\C1\C0\0C^A\08\F2`\0F\F8\00\0F@a\D8\80h\83 \01\EE\0C\10;b`$ \08\06\099\94Bpg\80\D8s\03\C4\8E\18 \0D\08\82\81\1B\C8\82\10\94\02)\5C\1A\0C\97\02X\86\9B\03\22S\E0\C80b\A0\00 \08\06qP\0B\C1\1F\F8\C1\00\0A\A80\C8\10\F8A\1F\0C2\08\7F\D0\07\B3\0D} \00\B3\0D\81\10\0C\1B\10x\10$\C0\CD\01bG\0C\8C\04\04\C1 Q\87X\08N\0E\10;b`$ \08\06I<\C8Bpr\80\D8\DB\03\C4\8E\18 \0D\08\82\81\1B\FC\82\10\C8B,\1C\1D\0C\97\02X\86\03\05\22S\E0\C80b\A0\00 \08\06q \0E\01+\98\C2\D0\0A\B50\C8\10\AC\82*\0C2\08\AC\A0\0A\B3\0D\AA \00\B3\0D\81\10\0C\1B\10\A5\10$\C0\F9\01bG\0C\8C\04\04\C1 \B9\07_\086p0\05[ \07\0A\1C\19(\15\1C\19\C8\14\1C\19.\08\ED\06\0E\AB\B0\0B\BB@\81#\C3\88A\03\80 \18\CC\81;\18\C5@\0E\BB\80\0B\81.\88\C3\06\0E\AE\E0\0B\BE0l@\04B\02l\E0\F0\0A\BF\D0\0E\1482\DC,\10\99\02G\86\11\03\05\00A0\A8\83y\08~\C1\17\06p@\87\0D\1Ch\81\1C\E4a\D8\80\08\84\04\D8\C0\A1\16\CAa\1E(pd\B8\5C 2\05\8E\0C#\06\0A\00\82`P\07\F9\10\94\C3/\0C\E6\E0\0E\1B8\E8\82:\E0\C3\B0\01\11\08\09\B0\81\C3.\AC\C3:P\E0\C8@\BE\E0\C8@\BA\E0\C8pAh7p\00\07x\F0\07\0A\1C\19F\0C\1A\00\04\C1`\0EF\C2(\86|\80\87v\08\DE\E1\1E6p\18\87y\08\89a\03\22\10\12`\03\07r\A0\07\91\A0\C0\91\E1\C4\01\B1#\06F\02\82`\90\E0\84H\04G\0E\88\1D10\12\10\04\83$'F\228s@\EC\88\81\91\80 \18$:\D1\0F\C1\A1\03bG\0C\8C\04\04\C1 \D9\09\7F\08N\1D\10;b`$ \08\06\09O\8CDp\EC\80\D8\11\03#\01A0Hz\E2$\82s\07\C4\8E\18\18\09\08\82A\E2\13(\11\1C< v\C4\C0H@\10\0C\92\9FH\89 \93p J\00\00\00\D6\19@T\B6M\9BN\834\13\11U\C0\C2\1EH1Y\8D\22\1DH1\F9\C00D\B6T\08NS\D5\E6T\08NS\D9\86s\5C4\FD\03\CD`T\85\E04UnW\91\F4,\C0\E4K\CF\02LH#\11\D1d6\C7E\D3?\10HfU\08NS\E9\F64H\C7bQ\85\E04\15n=\88t \C5\F4\1F\8F%\11\82\D3T\963`4m<\88t \C5\F4/\8FA\11\12\15\DC\06RH\07RL\B6\13!\CDDD\15\B0\B0\13\10M& )Fc\5C>0\0C\91mI\D2\B3\00\93/=\0B0!\8DDD\D3n7\C7E\D3\BFtD\F6CL\CC\D3\1Ba\80P\D5\F6'T\B6U\0D\C00\98\D2 Q\81\1D\06\10U]\DB\86\18@Tv}[c\00Q\D95n\5C\8C\F4,\C0\E4K\CF\02L\BCM\06\10\95]\EB\E63L\CCs\00\05\D1L\11f@\C5\C4<5mA\C5\C4<um\94\01DU\D7\BBa-\D2\B3\00\93/=\0B0Yf\00Q\D95o\1F\C1e\9C\01De\D7\BD9\06\10\95]\E7\00\011\00\002\00\00\00[\06'`\B6\0CO\E0l\19\B8\C0\D92\80A\E0l\19\C6 p\B6\0Ch\108[\865\08\9C-C\1C\04\CC\96\81\0E\02g\CBp\07\01\B3e\C0\83\80\D92\E8A\C0l\19\F6 `\B6\0C|\108[\06?\08\98-\C3\1F\04\CC\96\01\14\02g\CB \0A\01\B3e8\85\22\DA2\ACB\C0l\19b!\98\B6\0C\B8PD[\06^\08\98-\838\04\D3\96\C1\1C\02f\CBp\0E\01\B3e@\87\80\D92\ACC\C0l\19\DC!`\B6\0C\F0\100[\06y\08\98-C=\04\CC\96\E1\1E\02f\CB\90\0F\01\B3e\E0\87\80\D92\F8C\C0l\19\FE!`\B6\0C \110[\86\91\08\98-\83I\04\CC\96\01%\02\06\00\00!1\00\00\1C\00\00\00\0B> \10\06\A20\0E$Q\16\A6q\1E(\92&\AA\B2\AE\8D\EB\B4\0CC\16L@ \0CDa\1CH\A2,\CE\D3@LT\06\0B\FA\00\08\84\81(\8C\C3y\90DY\98\06\8A\A4\89\AA\AC\0B\CB\B4\8D\EB\BC\0F\0C\C2@\0C\C6\80\0C\CA\C0\0C\CE\00\0D\D2@\0D\D6\80\0D\DA\00\0E\E4`\0E\EE\00\0F\DC\E0\0D\E2\80\0E\EA\C0\0E\F2@\0F\F6`\03\00\00\00\00q \00\00\04\00\00\002\0E\10\22\84\01\F0\06h\00\9D\80\0F\D9\0C\00\00\00\00\00ek\00\00\00\1B\00\00\00kn\01\00\00\07\00\00\00n\01\00\00\07\00\00\00\FF\FF\FF\FF\08$\00\00u\01\00\00#\00\00\00um\02\00\00#\00\00\00m\02\00\00#\00\00\00\FF\FF\FF\FF\08,\00\00\90\02\00\00\22\00\00\00\90\02\00\00\22\00\00\00\FF\FF\FF\FF\08,\00\00\00\00\00\00\13\00\00\00\00\00\00\00\13\00\00\00\FF\FF\FF\FF\00\04\00\00\00\00\00\00]\0C\00\00\CB\00\00\00\12\03\94`\06\00\00\00__PrintfTensorIndexmainllvm.lifetime.start.p0i8llvm.tpc.get.index.space.offsetllvm.tpc.get.index.space.sizellvm.tpc.ld.tnsr.v128i16.i1selu_i16llvm.tpc.st.tnsr.v128i16llvm.lifetime.end.p0i8llvm.tpc.v.i16.mov.sllvm.tpc.cmp.grt.i1.i16.i16.i1llvm.tpc.min.i16.i16.i16.i1llvm.tpc.cmp.less.v256i1.v128i16.i16.i1llvm.tpc.bv.mov.bv.bllvm.tpc.ash.v128i16.v128i16.v256i8.v256i1exp_i16llvm.tpc.add.v128i16.v128i16.i16.i1llvm.tpc.msac.v128i16.i16.v256i8.v256i1llvm.memset.p0i8.i32llvm.tpc.abs.v128i16.v128i16.i1llvm.tpc.shr.v128i16.i16.i1llvm.tpc.and.v128i16.v128i16.i16.i1llvm.memcpy.p0i8.p0i8.i32llvm.tpc.lookup.c1c2.v256i16.v128i16llvm.tpc.msac.v128i16.v128i16.i8.i1llvm.tpc.lookup.c0.v128i16.v128i167.0.0 git-471b296fa21tpc/home/dmordechai/trees/npu-stack/tpc_fuser/fused_kernels/kernels/src/selu_params_i16.c\00\00\00\00", section ".llvmir"
@llvm.compiler.used = appending global [1 x i8*] [i8* getelementptr inbounds ([10168 x i8], [10168 x i8]* @llvm.embedded.module, i32 0, i32 0)], section "llvm.metadata"

; Function Attrs: nounwind
define dso_local void @main() local_unnamed_addr #0 {
entry:
  %0 = tail call <5 x i32> @llvm.tpc.get.index.space.offset()
  %1 = tail call <5 x i32> @llvm.tpc.get.index.space.size()
  %add = add <5 x i32> %1, %0
  %vecext = extractelement <5 x i32> %0, i32 2
  %vecext1 = extractelement <5 x i32> %add, i32 2
  %cmp54 = icmp slt i32 %vecext, %vecext1
  br i1 %cmp54, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %vecext3 = extractelement <5 x i32> %0, i32 0
  %mul4 = shl nsw i32 %vecext3, 7
  %vecext6 = extractelement <5 x i32> %add, i32 0
  %mul7 = shl nsw i32 %vecext6, 7
  %cmp852 = icmp slt i32 %mul4, %mul7
  %vecext11 = extractelement <5 x i32> %0, i32 1
  %mul12 = shl nsw i32 %vecext11, 2
  %vecext14 = extractelement <5 x i32> %add, i32 1
  %mul15 = shl i32 %vecext14, 2
  %cmp1650 = icmp slt i32 %mul12, %mul15
  br label %for.body

for.cond.cleanup.loopexit:                        ; preds = %for.cond.cleanup9
  br label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond.cleanup.loopexit, %entry
  ret void

for.body:                                         ; preds = %for.cond.cleanup9, %for.body.lr.ph
  %dim2.055 = phi i32 [ %vecext, %for.body.lr.ph ], [ %add28, %for.cond.cleanup9 ]
  br i1 %cmp852, label %for.body10.preheader, label %for.cond.cleanup9

for.body10.preheader:                             ; preds = %for.body
  br label %for.body10

for.cond.cleanup9.loopexit:                       ; preds = %for.cond.cleanup17
  br label %for.cond.cleanup9

for.cond.cleanup9:                                ; preds = %for.cond.cleanup9.loopexit, %for.body
  %add28 = add nsw i32 %dim2.055, 1
  %exitcond57 = icmp eq i32 %add28, %vecext1
  br i1 %exitcond57, label %for.cond.cleanup.loopexit, label %for.body

for.body10:                                       ; preds = %for.body10.preheader, %for.cond.cleanup17
  %dim0.053 = phi i32 [ %add25, %for.cond.cleanup17 ], [ %mul4, %for.body10.preheader ]
  br i1 %cmp1650, label %for.body18.lr.ph, label %for.cond.cleanup17

for.body18.lr.ph:                                 ; preds = %for.body10
  %2 = insertelement <5 x i32> <i32 undef, i32 undef, i32 undef, i32 0, i32 0>, i32 %dim0.053, i32 0
  %3 = call <128 x i16> @llvm.tpc.mov.v128i16.i16.i1(i16 0, i8 7, i32 0, <128 x i16> undef, i1 true, i1 false) #3
  %4 = call <128 x i16> @llvm.tpc.mov.v128i16.i16.i1(i16 -19, i8 7, i32 0, <128 x i16> undef, i1 true, i1 false) #3
  %5 = call <128 x i16> @llvm.tpc.mov.v128i16.i16.i1(i16 -14, i8 7, i32 0, <128 x i16> undef, i1 true, i1 false) #3
  %6 = bitcast <128 x i16> %5 to <256 x i8>
  %7 = bitcast <128 x i16> %4 to <256 x i8>
  br label %for.body18

for.cond.cleanup17.loopexit:                      ; preds = %for.body18
  br label %for.cond.cleanup17

for.cond.cleanup17:                               ; preds = %for.cond.cleanup17.loopexit, %for.body10
  %add25 = add nsw i32 %dim0.053, 128
  %cmp8 = icmp slt i32 %add25, %mul7
  br i1 %cmp8, label %for.body10, label %for.cond.cleanup9.loopexit

for.body18:                                       ; preds = %for.body18, %for.body18.lr.ph
  %dim1.051 = phi i32 [ %mul12, %for.body18.lr.ph ], [ %add23, %for.body18 ]
  %8 = insertelement <5 x i32> %2, i32 %dim1.051, i32 1
  %vecinit22 = insertelement <5 x i32> %8, i32 %dim2.055, i32 2
  %9 = tail call <128 x i16> @llvm.tpc.ld.tnsr.v128i16.i1(<5 x i32> %vecinit22, i8 0, i32 0, <128 x i16> undef, i1 true, i1 false)
  %10 = tail call <256 x i1> @llvm.tpc.cmp.less.v256i1.v128i16.i16.i1(<128 x i16> %9, i16 0, i8 7, i32 0, <256 x i1> undef, i1 true, i1 false) #3
  %11 = call <256 x i1> @llvm.tpc.mov.v256i1.v256i1.i1(<256 x i1> %10, i8 6, i32 0, <256 x i1> undef, i1 true, i1 false)
  %12 = tail call <128 x i16> @llvm.tpc.ash.v128i16.v128i16.v256i8.v256i1(<128 x i16> %9, <256 x i8> <i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3>, i8 7, i32 2, <128 x i16> %9, <256 x i1> %11, i1 false) #3
  %13 = tail call <128 x i16> @llvm.tpc.abs.v128i16.v128i16.i1(<128 x i16> %12, i8 7, i32 0, <128 x i16> undef, i1 true, i1 false) #3
  %14 = tail call <128 x i16> @llvm.tpc.shr.v128i16.i16.i1(<128 x i16> %13, i16 9, i8 7, i32 0, <128 x i16> undef, i1 true, i1 false) #3
  %15 = tail call <128 x i16> @llvm.tpc.and.v128i16.v128i16.i16.i1(<128 x i16> %13, i16 511, i8 7, i32 0, <128 x i16> undef, i1 true, i1 false) #3
  %16 = tail call <256 x i16> @llvm.tpc.lookup.c1c2.v256i16.v128i16(<128 x i16> %14, i32 36, i32 2, <256 x i16> zeroinitializer, i1 true, i1 false) #3
  %17 = tail call <256 x i16> @llvm.tpc.lookup.c1c2.v256i16.v128i16(<128 x i16> %14, i32 36, i32 3, <256 x i16> %16, i1 true, i1 false) #3
  %y00.sroa.0.256.vec.extract66.i.i = shufflevector <256 x i16> %17, <256 x i16> undef, <128 x i32> <i32 128, i32 129, i32 130, i32 131, i32 132, i32 133, i32 134, i32 135, i32 136, i32 137, i32 138, i32 139, i32 140, i32 141, i32 142, i32 143, i32 144, i32 145, i32 146, i32 147, i32 148, i32 149, i32 150, i32 151, i32 152, i32 153, i32 154, i32 155, i32 156, i32 157, i32 158, i32 159, i32 160, i32 161, i32 162, i32 163, i32 164, i32 165, i32 166, i32 167, i32 168, i32 169, i32 170, i32 171, i32 172, i32 173, i32 174, i32 175, i32 176, i32 177, i32 178, i32 179, i32 180, i32 181, i32 182, i32 183, i32 184, i32 185, i32 186, i32 187, i32 188, i32 189, i32 190, i32 191, i32 192, i32 193, i32 194, i32 195, i32 196, i32 197, i32 198, i32 199, i32 200, i32 201, i32 202, i32 203, i32 204, i32 205, i32 206, i32 207, i32 208, i32 209, i32 210, i32 211, i32 212, i32 213, i32 214, i32 215, i32 216, i32 217, i32 218, i32 219, i32 220, i32 221, i32 222, i32 223, i32 224, i32 225, i32 226, i32 227, i32 228, i32 229, i32 230, i32 231, i32 232, i32 233, i32 234, i32 235, i32 236, i32 237, i32 238, i32 239, i32 240, i32 241, i32 242, i32 243, i32 244, i32 245, i32 246, i32 247, i32 248, i32 249, i32 250, i32 251, i32 252, i32 253, i32 254, i32 255>
  %y00.sroa.0.0.vec.extract.i.i = shufflevector <256 x i16> %17, <256 x i16> undef, <128 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63, i32 64, i32 65, i32 66, i32 67, i32 68, i32 69, i32 70, i32 71, i32 72, i32 73, i32 74, i32 75, i32 76, i32 77, i32 78, i32 79, i32 80, i32 81, i32 82, i32 83, i32 84, i32 85, i32 86, i32 87, i32 88, i32 89, i32 90, i32 91, i32 92, i32 93, i32 94, i32 95, i32 96, i32 97, i32 98, i32 99, i32 100, i32 101, i32 102, i32 103, i32 104, i32 105, i32 106, i32 107, i32 108, i32 109, i32 110, i32 111, i32 112, i32 113, i32 114, i32 115, i32 116, i32 117, i32 118, i32 119, i32 120, i32 121, i32 122, i32 123, i32 124, i32 125, i32 126, i32 127>
  %18 = tail call <128 x i16> @llvm.tpc.msac.v128i16.v128i16.i8.i1(<128 x i16> %y00.sroa.0.256.vec.extract66.i.i, 
                                                                   <128 x i16> %15, 
                                                                   <256 x i8> <i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1, i8 -12, i8 -1>, 
                                                                   i8 0, i8 7, i32 2, 
                                                                   <128 x i16> %y00.sroa.0.0.vec.extract.i.i, i1 true, i1 false) #3
  %19 = tail call <128 x i16> @llvm.tpc.lookup.c0.v128i16.v128i16(<128 x i16> %14, i32 
                                                                36, i32 2, <128 x i16> %y00.sroa.0.256.vec.extract66.i.i, i1 true, i1 false) #3
  %20 = tail call <128 x i16> @llvm.tpc.lookup.c0.v128i16.v128i16(<128 x i16> %14, i32 36, i32 3, <128 x i16> %19, i1 true, i1 false) #3
  %21 = tail call <128 x i16> @llvm.tpc.msac.v128i16.v128i16.i8.i1(<128 x i16> %18, <128 x i16> %15, <256 x i8> <i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1, i8 -11, i8 -1>, i8 0, i8 7, i32 2, <128 x i16> %20, i1 true, i1 false) #3
  %22 = tail call <128 x i16> @llvm.tpc.add.v128i16.v128i16.i16.i1(<128 x i16> %21, i16 -32768, i8 7, i32 1, <128 x i16> undef, i1 true, i1 false) #3
  %23 = tail call <128 x i16> @llvm.tpc.msac.v128i16.i16.v256i8.v256i1(<128 x i16> %12, i16 16384, <256 x i8> %6, <256 x i8> zeroinitializer, i8 7, i32 2, <128 x i16> %3, <256 x i1> %10, i1 true) #3
  %24 = tail call <128 x i16> @llvm.tpc.msac.v128i16.i16.v256i8.v256i1(<128 x i16> %22, i16 20480, <256 x i8> %7, <256 x i8> zeroinitializer, i8 7, i32 2, <128 x i16> %23, <256 x i1> %10, i1 false) #3
  tail call void @llvm.tpc.st.tnsr.v128i16(<5 x i32> %vecinit22, i8 1, <128 x i16> %24, i32 0, i1 true, i1 false)
  %add23 = add nsw i32 %dim1.051, 1
  %exitcond = icmp eq i32 %add23, %mul15
  br i1 %exitcond, label %for.cond.cleanup17.loopexit, label %for.body18, !llvm.loop !4
}

; Function Attrs: nounwind readnone
declare <5 x i32> @llvm.tpc.get.index.space.offset() #1

; Function Attrs: nounwind readnone
declare <5 x i32> @llvm.tpc.get.index.space.size() #1

; Function Attrs: nounwind readnone
declare <256 x i1> @llvm.tpc.mov.v256i1.v256i1.i1(<256 x i1>, i8, i32, <256 x i1>, i1, i1) #2

; Function Attrs: nounwind readnone
declare <128 x i16> @llvm.tpc.ld.tnsr.v128i16.i1(<5 x i32>, i8, i32, <128 x i16>, i1, i1) #1

; Function Attrs: nounwind writeonly
declare void @llvm.tpc.st.tnsr.v128i16(<5 x i32>, i8, <128 x i16>, i32, i1, i1) #2

; Function Attrs: nounwind readnone
declare <128 x i16> @llvm.tpc.mov.v128i16.i16.i1(i16, i8, i32, <128 x i16>, i1, i1) #1

; Function Attrs: nounwind readnone
declare <256 x i1> @llvm.tpc.cmp.less.v256i1.v128i16.i16.i1(<128 x i16>, i16, i8, i32, <256 x i1>, i1, i1) #1

; Function Attrs: nounwind readnone
declare <256 x i1> @llvm.tpc.bv.mov.bv.b(<256 x i1>, <256 x i1>, i1, i1) #1

; Function Attrs: nounwind readnone
declare <128 x i16> @llvm.tpc.ash.v128i16.v128i16.v256i8.v256i1(<128 x i16>, <256 x i8>, i8, i32, <128 x i16>, <256 x i1>, i1) #1

; Function Attrs: nounwind readnone
declare <128 x i16> @llvm.tpc.add.v128i16.v128i16.i16.i1(<128 x i16>, i16, i8, i32, <128 x i16>, i1, i1) #1

; Function Attrs: nounwind readnone
declare <128 x i16> @llvm.tpc.msac.v128i16.i16.v256i8.v256i1(<128 x i16>, i16, <256 x i8>, <256 x i8>, i8, i32, <128 x i16>, <256 x i1>, i1) #1

; Function Attrs: nounwind readnone
declare <128 x i16> @llvm.tpc.abs.v128i16.v128i16.i1(<128 x i16>, i8, i32, <128 x i16>, i1, i1) #1

; Function Attrs: nounwind readnone
declare <128 x i16> @llvm.tpc.shr.v128i16.i16.i1(<128 x i16>, i16, i8, i32, <128 x i16>, i1, i1) #1

; Function Attrs: nounwind readnone
declare <128 x i16> @llvm.tpc.and.v128i16.v128i16.i16.i1(<128 x i16>, i16, i8, i32, <128 x i16>, i1, i1) #1

; Function Attrs: nounwind readnone
declare <256 x i16> @llvm.tpc.lookup.c1c2.v256i16.v128i16(<128 x i16>, i32, i32, <256 x i16>, i1, i1) #1

; Function Attrs: nounwind readnone
declare <128 x i16> @llvm.tpc.msac.v128i16.v128i16.i8.i1(<128 x i16>, <128 x i16>, <256 x i8>, i8, i8, i32, <128 x i16>, i1, i1) #1

; Function Attrs: nounwind readnone
declare <128 x i16> @llvm.tpc.lookup.c0.v128i16.v128i16(<128 x i16>, i32, i32, <128 x i16>, i1, i1) #1

attributes #0 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="dali" "target-features"="+dali" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind writeonly }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}
!llvm.tpc.scalar_data = !{!2}
!llvm.tpc.vector_data = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 7.0.0 (ssh://gerrit:29418/tpc_clang cad1854857634550e5d64fae6be97b429a2f3446) (ssh://gerrit:29418/tpc_llvm 471b296fa212b95dc076462640e52ac31370f574)"}
!2 = !{i32 0}
!3 = !{i32 256}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.machine.unroll.count", i32 4}
