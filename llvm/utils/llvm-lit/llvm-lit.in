#!/usr/bin/env python
# -*- coding: utf-8 -*-

import os
import sys

config_map = {}

def map_config(source_dir, site_config):
    global config_map
    source_dir = os.path.realpath(source_dir)
    source_dir = os.path.normcase(source_dir)
    site_config = os.path.normpath(site_config)
    config_map[source_dir] = site_config

# Variables configured at build time.


try:
    llvm_obj_root = os.environ['LLVM_OBJ_DIR']
    env_source_dir = os.environ['LLVM_SOURCE_DIR']
    llvm_source_root = os.path.join(env_source_dir, "llvm")
    clang_source_root = os.path.join(env_source_dir, "clang")
except KeyError:
    llvm_obj_root = "@LLVM_BINARY_DIR@"
    llvm_source_root = "@LLVM_SOURCE_DIR@"
    clang_source_root = os.path.realpath(os.path.join(llvm_source_root, os.pardir, "clang"))

# Make sure we can find the lit package.
sys.path.insert(0, os.path.join(llvm_source_root, 'utils', 'lit'))

# Set up some builtin parameters, so that by default the LLVM test suite
# configuration file knows how to find the object tree.
builtin_parameters = { 
	'build_mode' : "@BUILD_MODE@",
	'llvm_build' : llvm_obj_root,
	'llvm_src'   : llvm_source_root,
	'clang_src'  : clang_source_root
}


@LLVM_LIT_CONFIG_MAP@

builtin_parameters['config_map'] = config_map

if __name__=='__main__':
    from lit.main import main
    main(builtin_parameters)
