//===--------ExpF32.h-----------------------------------------------------===//
//
// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
//===----------------------------------------------------------------------===//
//
//===----------------------------------------------------------------------===//
#ifdef WIN32
const llvm::StringRef GaudiExpF32LL = "";
#else
const llvm::StringRef GaudiExpF32LL = R"(
; Function Attrs: alwaysinline nounwind
define  dso_local <64 x float> @exp_cephes_f32(<64 x float> %input) local_unnamed_addr #2 {
entry:
  %0 = bitcast <64 x float> %input to <64 x i32>
  %1 = call <64 x float> @llvm.tpc.mac.v64f32.v64f32.i1(<64 x float> %input, <64 x float> <float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000>, i8 0, i32 0, <64 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, i1 true, i1 false) #4
  %2 = call <64 x float> @llvm.tpc.nearbyint.v64f32.v64f32.i1(<64 x float> %1, i8 0, i32 196608, <64 x float> undef, i1 true, i1 false) #4
  %3 = call <64 x float> @llvm.tpc.mac.v64f32.v64f32.i1(<64 x float> %2, <64 x float> <float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000>, i8 0, i32 2, <64 x float> %input, i1 true, i1 false) #4
  %4 = call <64 x float> @llvm.tpc.mac.v64f32.v64f32.i1(<64 x float> %2, <64 x float> <float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000>, i8 0, i32 2, <64 x float> %3, i1 true, i1 false) #4
  %5 = call <64 x float> @llvm.tpc.mac.v64f32.v64f32.i1(<64 x float> %4, <64 x float> <float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000, float 0x3F81299C80000000>, i8 0, i32 0, <64 x float> <float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000, float 0x3FA5766120000000>, i1 true, i1 false) #4
  %6 = call <64 x float> @llvm.tpc.mac.v64f32.v64f32.i1(<64 x float> %5, <64 x float> %4, i8 0, i32 0, <64 x float> <float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000, float 0x3FC5553A60000000>, i1 true, i1 false) #4
  %7 = call <64 x float> @llvm.tpc.mac.v64f32.v64f32.i1(<64 x float> %6, <64 x float> %4, i8 0, i32 0, <64 x float> <float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000, float 0x3FDFFFD020000000>, i1 true, i1 false) #4
  %8 = call <64 x float> @llvm.tpc.mac.v64f32.v64f32.i1(<64 x float> %7, <64 x float> %4, i8 0, i32 0, <64 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, i1 true, i1 false) #4
  %9 = call <64 x float> @llvm.tpc.mac.v64f32.v64f32.i1(<64 x float> %8, <64 x float> %4, i8 0, i32 0, <64 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, i1 true, i1 false) #4
  %10 = bitcast <64 x float> %9 to <64 x i32>
  %11 = call <64 x i32> @llvm.tpc.convert.v64i32.v64f32.i1(<64 x float> %2, i8 0, i32 197120, <64 x i32> undef, i1 true, i1 false) #4
  %12 = call <64 x i32> @llvm.tpc.shl.v64i32.i32.i1(<64 x i32> %11, i32 23, i8 2, i32 0, <64 x i32> undef, i1 true, i1 false) #4
  %13 = add <64 x i32> %12, %10
  %14 = bitcast <64 x i32> %13 to <64 x float>
  %15 = call <64 x float> @llvm.tpc.sel.leq.v64f32.v64f32.v64f32.v64f32.v64f32.i1(<64 x float> %input, <64 x float> <float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000, float 0xC055D58100000000>, <64 x float> zeroinitializer, <64 x float> %14, i8 0, i32 0, <64 x float> undef, i1 true, i1 false)
  %16 = call <64 x float> @llvm.tpc.sel.geq.v64f32.v64f32.v64f32.v64f32.v64f32.i1(<64 x float> %input, <64 x float> <float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000, float 0x40562E3540000000>, <64 x float> <float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000>, <64 x float> %15, i8 0, i32 0, <64 x float> undef, i1 true, i1 false)
  %and = and <64 x i32> %0, <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>
  %17 = call <64 x float> @llvm.tpc.sel.grt.v64f32.v64i32.i32.v64f32.v64f32.i1(<64 x i32> %and, i32 2139095040, <64 x float> %input, <64 x float> %16, i8 3, i32 0, <64 x float> undef, i1 true, i1 false)
  ret <64 x float> %17
}

declare <5 x i32> @llvm.tpc.get.index.space.offset() #1

declare <5 x i32> @llvm.tpc.get.index.space.size() #1

declare <64 x float> @llvm.tpc.ld.tnsr.v64f32.i1(<5 x i32>, i8, i32, <64 x float>, i1, i1) #1

declare void @llvm.tpc.st.tnsr.v64f32(<5 x i32>, i8, <64 x float>, i32, i1, i1) #2

declare <64 x float> @llvm.tpc.sel.leq.v64f32.v64f32.v64f32.v64f32.v64f32.i1(<64 x float>, <64 x float>, <64 x float>, <64 x float>, i8, i32, <64 x float>, i1, i1) #1

declare <64 x float> @llvm.tpc.sel.geq.v64f32.v64f32.v64f32.v64f32.v64f32.i1(<64 x float>, <64 x float>, <64 x float>, <64 x float>, i8, i32, <64 x float>, i1, i1) #1

declare <64 x float> @llvm.tpc.sel.grt.v64f32.v64i32.i32.v64f32.v64f32.i1(<64 x i32>, i32, <64 x float>, <64 x float>, i8, i32, <64 x float>, i1, i1) #1

declare <64 x float> @llvm.tpc.mac.v64f32.v64f32.i1(<64 x float>, <64 x float>, i8, i32, <64 x float>, i1, i1) #1

declare <64 x float> @llvm.tpc.nearbyint.v64f32.v64f32.i1(<64 x float>, i8, i32, <64 x float>, i1, i1) #1

declare <64 x i32> @llvm.tpc.convert.v64i32.v64f32.i1(<64 x float>, i8, i32, <64 x i32>, i1, i1) #1

declare <64 x i32> @llvm.tpc.shl.v64i32.i32.i1(<64 x i32>, i32, i8, i32, <64 x i32>, i1, i1) #1

attributes #0 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="2048" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="gaudi" "target-features"="+gaudi" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { alwaysinline nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="2048" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="gaudi" "target-features"="+gaudi" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind writeonly }
attributes #4 = { nounwind readnone   willreturn }
)";
#endif
